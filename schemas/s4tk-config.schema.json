{
  "$schema": "http://json-schema.org/schema",
  "definitions": {
    "stringTableLocale": {
      "type": "string",
      "enum": [
        "English",
        "ChineseSimplified",
        "ChineseTraditional",
        "Czech",
        "Danish",
        "Dutch",
        "Finnish",
        "French",
        "German",
        "Italian",
        "Japanese",
        "Korean",
        "Norwegian",
        "Polish",
        "Portuguese",
        "Russian",
        "Spanish",
        "Swedish"
      ]
    }
  },
  "type": "object",
  "required": [
    "buildInstructions"
  ],
  "additionalProperties": false,
  "properties": {
    "buildInstructions": {
      "type": "object",
      "required": [
        "source",
        "destinations",
        "packages"
      ],
      "additionalProperties": false,
      "properties": {
        "source": {
          "type": "string",
          "description": "Absolute or relative path to the folder that contains all of the resources for this project.\n\nBoth Windows and Unix paths are accepted; they will be automatically converted as needed."
        },
        "destinations": {
          "type": "array",
          "description": "List of absolute and/or relative paths to folders where all built packages should be output to.\n\nBoth Windows and Unix paths are accepted; they will be automatically converted as needed.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "packages": {
          "type": "array",
          "description": "List of packages to build to each folder within `destinations`.",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": [
              "filename",
              "include"
            ],
            "additionalProperties": false,
            "properties": {
              "filename": {
                "type": "string",
                "description": "What to name the built package file."
              },
              "include": {
                "type": "array",
                "description": "List of glob patterns (relative to the source folder) that capture all files that should be built into this package.\n\nBoth Windows and Unix paths are accepted; they will be automatically converted as needed.",
                "items": {
                  "type": "string"
                }
              },
              "exclude": {
                "type": "array",
                "description": "List of glob patterns (relative to the source folder) of files that should be excluded, even if they pass one of the `include` patterns.\n\nBoth Windows and Unix paths are accepted; they will be automatically converted as needed.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "buildSettings": {
      "type": "object",
      "description": "Settings that affect the build process.",
      "additionalProperties": false,
      "properties": {
        "allowFolderCreation": {
          "type": "boolean",
          "description": "Whether or not the S4TK extension is allowed to create missing folders in order to output to `destinations` while building.",
          "default": false
        },
        "generateMissingLocales": {
          "type": "boolean",
          "description": "Whether or not to generate string tables for all missing locales (using the text from the default locale).",
          "default": true
        },
        "minifyTuning": {
          "type": "boolean",
          "description": "Whether or not to minify tuning (i.e. remove all whitespace, comments, and processing instructions).",
          "default": false
        },
        "mergeStringTablesInSamePackage": {
          "type": "boolean",
          "description": "Whether or not all of the string tables of the same locale being written to the same package should be merged.",
          "default": true
        },
        "outputBuildSummaryFile": {
          "type": "boolean",
          "description": "Whether or not the `BuildSummary.txt` file should be generated after each build.",
          "default": true
        }
      }
    },
    "workspaceSettings": {
      "type": "object",
      "description": "Settings that affect how the S4TK works while you're using it.",
      "additionalProperties": false,
      "properties": {
        "defaultLocale": {
          "$ref": "#/definitions/stringTableLocale",
          "description": "The language that you write your strings in.",
          "default": "English"
        },
        "defaultStringTable": {
          "type": "string",
          "description": "Absolute or relative path to the string table (binary or JSON) that serves as the default for this project. Any strings generated via commands will be added to this string table.\n\nBoth Windows and Unix paths are accepted; they will be automatically converted as needed."
        },
        "showXmlKeyOverrideButtons": {
          "type": "boolean",
          "description": "Whether or not to show the Type/Group/Instance override buttons within XML files. If the buttons are hidden, you can still add the comments to override them manually.",
          "default": true
        },
        "showStblJsonMetaDataButton": {
          "type": "boolean",
          "description": "Whether or not to show the button in array-based STBL JSONs that adds meta data, converting it to an object-based STBL JSON.",
          "default": true
        },
        "newStringsToStartOfTable": {
          "type": "boolean",
          "description": "Whether or not to insert strings generated via commands to the beginning of the string table, rather than to the end (very convenient for STBL JSONs).",
          "default": true
        },
        "newStringTableJsonType": {
          "type": "string",
          "description": "Which kind of STBL JSON should be generated by the command.",
          "enum": [
            "array",
            "object"
          ],
          "default": "object"
        },
        "showCopyConfirmationPopup": {
          "type": "boolean",
          "description": "Whether or not to show a popup to confirm when something has been copied to your clipboard.",
          "default": true
        },
        "spacesPerIndent": {
          "type": "integer",
          "description": "Number of spaces to use per indent level while formatting JSON and XML documents.",
          "minimum": 1,
          "default": 2
        }
      }
    }
  }
}